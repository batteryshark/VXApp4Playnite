<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Playnite.SDK</name>
    </assembly>
    <members>
        <member name="T:Playnite.SDK.ApplicationMode">
            <summary>
            Represents Playnite's application mode.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ApplicationMode.Desktop">
            <summary>
            Desktop application mode.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ApplicationMode.Fullscreen">
            <summary>
            Fullscreen application mode.
            </summary>
        </member>
        <member name="T:Playnite.SDK.BuiltinExtension">
            <summary>
            Represents built-in plugin distributed by default with Playnite installation.
            </summary>
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.Unknown">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.BattleNetLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.BethesdaLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.EpicLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.GogLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.ItchioLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.OriginLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.SteamLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.UplayLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.TwitchLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.IgdbMetadata">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.HumbleLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.XboxLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.AmazonGamesLibrary">
            
        </member>
        <member name="F:Playnite.SDK.BuiltinExtension.PSNLibrary">
            
        </member>
        <member name="T:Playnite.SDK.BuiltinExtensions">
            <summary>
            Represents class with utilities for built-in extensions.
            </summary>
        </member>
        <member name="P:Playnite.SDK.BuiltinExtensions.BuiltinExtensionFolders">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.BuiltinExtensions.BuiltinExtensionIds">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.BuiltinExtensions.BuiltinDesktopThemeFolders">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.BuiltinExtensions.BuiltinFullscreenThemeFolders">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.BuiltinExtensions.ExtensionList">
            <summary>
            Gets list of built-in extension plugins.
            </summary>
        </member>
        <member name="M:Playnite.SDK.BuiltinExtensions.GetIsBuiltInPlugin(System.Guid)">
            <summary>
            Returns if specified plugin is built-in plugin.
            </summary>
            <param name="pluginId"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.BuiltinExtensions.GetExtensionFromId(System.Guid)">
            <summary>
            Gets extension plugin by plugin's ID.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.BuiltinExtensions.GetIdFromExtension(Playnite.SDK.BuiltinExtension)">
            <summary>
            Gets plugin ID for specified built-in extension.
            </summary>
            <param name="extension"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.GameDatabaseCollection">
            <summary>
            Represents type of game database collection.
            </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Uknown">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Games">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Platforms">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Emulators">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Genres">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Companies">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Tags">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Categories">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Series">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.AgeRatings">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Regions">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Sources">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.Features">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.GameDatabaseCollection.AppSoftware">
             <summary>
            
             </summary>
        </member>
        <member name="T:Playnite.SDK.IGameDatabase">
            <summary>
            Describes game databse API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Games">
            <summary>
            Gets collection of games.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Platforms">
            <summary>
            Gets collections of platforms.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Emulators">
            <summary>
            Gets collection of emulators.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Genres">
            <summary>
            Gets collection of genres.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Companies">
            <summary>
            Gets collection of companies.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Tags">
            <summary>
            Gets collection of tags.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Categories">
            <summary>
            Gets collection of categories.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Series">
            <summary>
            Gets collection of series.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.AgeRatings">
            <summary>
            Gets collection of age ratings.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Regions">
            <summary>
            Gets collection of regions.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Sources">
            <summary>
            Gets collection of sources.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.Features">
            <summary>
            Gets collection of game features.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabase.IsOpen">
            <summary>
            Gets value indicating whether database is opened.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IGameDatabase.DatabaseOpened">
            <summary>
            Invoked when database is being opened.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IGameDatabase.ImportGame(Playnite.SDK.Models.GameInfo)">
            <summary>
            Import new game into database.
            </summary>
            <param name="game">Game data to import.</param>
            <returns>Imported game.</returns>
        </member>
        <member name="M:Playnite.SDK.IGameDatabase.ImportGame(Playnite.SDK.Models.GameInfo,Playnite.SDK.Plugins.LibraryPlugin)">
            <summary>
            Import new game into database from a library plugin.
            </summary>
            <param name="game">Game data to import.</param>
            <param name="sourcePlugin">Source library plugin.</param>
            <returns>Imported game.</returns>
        </member>
        <member name="T:Playnite.SDK.ItemUpdateEvent`1">
            <summary>
            Represents event occuring when database are permanetly updated in database.
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:Playnite.SDK.ItemUpdateEvent`1.OldData">
            <summary>
            Gets or sets old item state.
            </summary>
        </member>
        <member name="P:Playnite.SDK.ItemUpdateEvent`1.NewData">
            <summary>
            Gets or sets new item state.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ItemUpdateEvent`1.#ctor(`0,`0)">
            <summary>
            Creates new instance of ItemUpdateEvent.
            </summary>
            <param name="oldData">Old state.</param>
            <param name="newData">New state.</param>
        </member>
        <member name="T:Playnite.SDK.ItemUpdatedEventArgs`1">
            <summary>
            Represents arguments for collection update events.
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:Playnite.SDK.ItemUpdatedEventArgs`1.UpdatedItems">
            <summary>
            Gets or sets list of update events.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ItemUpdatedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Creates new instance of ItemUpdatedEventArgs.
            </summary>
            <param name="oldData">Old item state.</param>
            <param name="newData">New item state.</param>
        </member>
        <member name="M:Playnite.SDK.ItemUpdatedEventArgs`1.#ctor(System.Collections.Generic.IEnumerable{Playnite.SDK.ItemUpdateEvent{`0}})">
            <summary>
            Creates new instance of ItemUpdatedEventArgs.
            </summary>
            <param name="updatedItems">Update events list.</param>
        </member>
        <member name="T:Playnite.SDK.ItemCollectionChangedEventArgs`1">
            <summary>
            Represents arguments for collection change events.
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:Playnite.SDK.ItemCollectionChangedEventArgs`1.AddedItems">
            <summary>
            Gets or sets list of added items.
            </summary>
        </member>
        <member name="P:Playnite.SDK.ItemCollectionChangedEventArgs`1.RemovedItems">
            <summary>
            Gets or sets list of removed items.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ItemCollectionChangedEventArgs`1.#ctor(System.Collections.Generic.List{`0},System.Collections.Generic.List{`0})">
            <summary>
            Creates new instance of ItemCollectionChangedEventArgs.
            </summary>
            <param name="addedItems">List of added items.</param>
            <param name="removedItems">List of removed items.</param>
        </member>
        <member name="T:Playnite.SDK.IItemCollection">
            <summary>
            Describes collection of items for game database.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IItemCollection.CollectionType">
            <summary>
            Gets item collection type.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IItemCollection.ContainsItem(System.Guid)">
            <summary>
            Check if an item is in the collection.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.IItemCollection`1">
            <summary>
            Describes collection of items for game database.
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="P:Playnite.SDK.IItemCollection`1.Item(System.Guid)">
            <summary>
            Gets or sets item from collection.
            </summary>
            <param name="id">Id of an item.</param>
            <returns><c>null</c> if no item is found otherwise item represents by specified id.</returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Get(System.Guid)">
            <summary>
            Gets item from collection.
            </summary>
            <param name="id">Id of an item.</param>
            <returns><c>null</c> if no item is found otherwise item represents by specified id.</returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Get(System.Collections.Generic.IList{System.Guid})">
            <summary>
            Gets items from collection.
            </summary>
            <param name="ids">Id of items.</param>
            <returns>List of items from collection.</returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Add(System.String)">
            <summary>
            Adds new item into collection.
            </summary>
            <param name="itemName">Name of new item.</param>
            <returns>Newly added item or existing item if one is present with the same name.</returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Add(System.String,System.Func{`0,System.String,System.Boolean})">
            <summary>
            Adds new item into collection.
            </summary>
            <param name="itemName">Name of new item.</param>
            <param name="existingComparer">Method to detect existing item from database compared to new item.</param>
            <returns>Newly added item or existing item if one is present with the same name.</returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Add(System.Collections.Generic.List{System.String})">
            <summary>
            Adds new items into collection.
            </summary>
            <param name="items">Names of items to be added.</param>
            <returns>Newly added items or existing items if there are some present with the same names.</returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Add(System.Collections.Generic.List{System.String},System.Func{`0,System.String,System.Boolean})">
            <summary>
            Adds new items into collection.
            </summary>
            <param name="items">Names of items to be added.</param>
            <param name="existingComparer">Method to detect existing item from database compared to new item.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds itemss to into collection.
            </summary>
            <param name="items">Item to be added.</param>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Remove(System.Guid)">
            <summary>
            Removes item from collection.
            </summary>
            <param name="id">Id of an item to be removed.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Remove(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Removes items from collection.
            </summary>
            <param name="items">List of items to be removed.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Update(`0)">
            <summary>
            Updates state of item in collection.
            </summary>
            <param name="item">New state of an object.</param>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.Update(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Updates states of items in collection.
            </summary>
            <param name="items">New states of items.</param>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.BeginBufferUpdate">
            <summary>
            Sets collection into buffered update state.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.EndBufferUpdate">
            <summary>
            Sets collection from buffered update state.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IItemCollection`1.GetClone">
            <summary>
            Gets clone of an collection.
            </summary>
            <returns></returns>
        </member>
        <member name="E:Playnite.SDK.IItemCollection`1.ItemCollectionChanged">
            <summary>
            Occurs when items are added or removed.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IItemCollection`1.ItemUpdated">
            <summary>
            Occurs when items are updated.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Data.IMarkupConverter">
            <summary>
            Describes markup converter.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Data.IMarkupConverter.MarkdownToHtml(System.String)">
            <summary>
            Converts Markdown markup to HTML.
            </summary>
            <param name="markdown"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Data.Markup">
            <summary>
            Represents markup converter.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Data.Markup.MarkdownToHtml(System.String)">
            <summary>
            Converts Markdown markup to HTML.
            </summary>
            <param name="markdown"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Data.IDataSerializer">
            <summary>
            Describes data serializer.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.ToYaml(System.Object)">
            <summary>
            Serailize an object to YAML string.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.FromYaml``1(System.String)">
            <summary>
            Deserialize an object from YAML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="yaml"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.FromYamlFile``1(System.String)">
            <summary>
            Deserialize an object from a file containing YAML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.ToJson(System.Object,System.Boolean)">
            <summary>
            Serailize an object to JSON string.
            </summary>
            <param name="obj"></param>
            <param name="formatted"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.ToJsonSteam(System.Object,System.IO.Stream,System.Boolean)">
            <summary>
            Serialize an object to JSON string written to a stream.
            </summary>
            <param name="obj"></param>
            <param name="stream"></param>
            <param name="formatted"></param>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.FromJson``1(System.String)">
            <summary>
            Deserialize an object from JSON string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.FromJsonStream``1(System.IO.Stream)">
            <summary>
            Deserialize an object from JSON data stream.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.FromJsonFile``1(System.String)">
            <summary>
            Deserialize an object from a file containing JSON string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.FromToml``1(System.String)">
            <summary>
            Deserialize an object from TOML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toml"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.IDataSerializer.FromTomlFile``1(System.String)">
            <summary>
            Deserialize an object from a file containing TOML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Data.Serialization">
            <summary>
            Represents data serialization utility.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.ToYaml(System.Object)">
            <summary>
            Serailize an object to YAML string.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.FromYaml``1(System.String)">
            <summary>
            Deserialize an object from YAML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="yaml"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.FromYamlFile``1(System.String)">
            <summary>
            Deserialize an object from a file containing YAML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.ToJson(System.Object,System.Boolean)">
            <summary>
            Serailize an object to JSON string.
            </summary>
            <param name="obj"></param>
            <param name="formatted"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.ToJsonSteam(System.Object,System.IO.Stream,System.Boolean)">
            <summary>
            Serialize an object to JSON string written to a stream.
            </summary>
            <param name="obj"></param>
            <param name="stream"></param>
            <param name="formatted"></param>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.FromJson``1(System.String)">
            <summary>
            Deserialize an object from JSON string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.FromJsonStream``1(System.IO.Stream)">
            <summary>
            Deserialize an object from JSON data stream.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.FromJsonFile``1(System.String)">
            <summary>
            Deserialize an object from a file containing JSON string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.FromToml``1(System.String)">
            <summary>
            Deserialize an object from TOML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="toml"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Data.Serialization.FromTomlFile``1(System.String)">
            <summary>
            Deserialize an object from a file containing TOML string.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Events.ApplicationEvent">
            <summary>
            Application wide events.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnApplicationStarted">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnApplicationStopped">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnLibraryUpdated">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnGameStarting">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnGameStarted">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnGameStopped">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnGameInstalled">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnGameUninstalled">
             <summary>
            
             </summary>
        </member>
        <member name="F:Playnite.SDK.Events.ApplicationEvent.OnGameSelected">
             <summary>
            
             </summary>
        </member>
        <member name="T:Playnite.SDK.Events.PlayniteUriEventArgs">
            <summary>
            Respresents arguments for Playnite URI execution event.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Events.PlayniteUriEventArgs.Arguments">
            <summary>
            Gets or sets url arguments.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Events.WebViewLoadingChangedEventArgs">
            <summary>
            Represents loading event occuring in web view browser instance.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Events.WebViewLoadingChangedEventArgs.IsLoading">
            <summary>
            Gets or sets value indicating whether the page is loading.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Events.GameSelectionEventArgs">
            <summary>
            Represents game selection change event.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Events.GameSelectionEventArgs.OldValue">
            <summary>
            Gets previously selected games.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Events.GameSelectionEventArgs.NewValue">
            <summary>
            Gets newly selected games.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Events.GameSelectionEventArgs.#ctor(System.Collections.Generic.List{Playnite.SDK.Models.Game},System.Collections.Generic.List{Playnite.SDK.Models.Game})">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Events.GameSelectionEventArgs"/>.
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="T:Playnite.SDK.Events.GameInstalledEventArgs">
            <summary>
            Represents game event.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Events.GameInstalledEventArgs.InstalledInfo">
            <summary>
            Gets or sets data for newly installed game.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Events.GameInstalledEventArgs.#ctor(Playnite.SDK.Models.GameInfo,Playnite.SDK.IGameController,System.Int64)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Events.GameInstalledEventArgs"/>.
            </summary>
            <param name="controller">Source controller of this event.</param>
            <param name="ellapsedTime">Time in seconds for how long the operation was running.</param>
            <param name="installedInfo">Newly installed game.</param>
        </member>
        <member name="M:Playnite.SDK.Events.GameInstalledEventArgs.#ctor(Playnite.SDK.Models.GameInfo,Playnite.SDK.IGameController,System.Double)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Events.GameInstalledEventArgs"/>.
            </summary>
            <param name="controller">Source controller of this event.</param>
            <param name="ellapsedTime">Time in seconds for how long the operation was running.</param>
            <param name="installedInfo">Newly installed game.</param>
        </member>
        <member name="T:Playnite.SDK.Events.GameControllerEventArgs">
            <summary>
            Represents game event.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Events.GameControllerEventArgs.Controller">
            <summary>
            Gets or sets source controller of this event.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Events.GameControllerEventArgs.EllapsedTime">
            <summary>
            Time in seconds for event to be finished.
            For example in case of Stopped event it indicates how long was game running until stopped.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Events.GameControllerEventArgs.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Events.GameControllerEventArgs"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Events.GameControllerEventArgs.#ctor(Playnite.SDK.IGameController,System.Int64)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Events.GameControllerEventArgs"/>.
            </summary>
            <param name="controller">Source controller of this event.</param>
            <param name="ellapsedTime">Time in seconds for how long the operation was running.</param>
        </member>
        <member name="M:Playnite.SDK.Events.GameControllerEventArgs.#ctor(Playnite.SDK.IGameController,System.Double)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Events.GameControllerEventArgs"/>.
            </summary>
            <param name="controller">Source controller of this event.</param>
            <param name="ellapsedTime">Time in seconds for how long the operation was running.</param>
        </member>
        <member name="T:Playnite.SDK.LocalizedException">
            <summary>
            Represents exception supporting localized message strings.
            </summary>
        </member>
        <member name="M:Playnite.SDK.LocalizedException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.LocalizedException"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.LocalizedException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.LocalizedException"/>.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Playnite.SDK.Exceptions.ScriptRuntimeException">
            <summary>
            Represents exception from scripting runtime.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Exceptions.ScriptRuntimeException.ScriptStackTrace">
            <summary>
            Gets script runtime stack trace.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Exceptions.ScriptRuntimeException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Exceptions.ScriptRuntimeException"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Exceptions.ScriptRuntimeException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Exceptions.ScriptRuntimeException"/>.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Playnite.SDK.Exceptions.ScriptRuntimeException.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Exceptions.ScriptRuntimeException"/>.
            </summary>
            <param name="message"></param>
            <param name="stackTrace"></param>
        </member>
        <member name="T:Playnite.SDK.TypeMismatchException">
            <summary>
            Represents errors related to type mismatch use.
            </summary>
        </member>
        <member name="M:Playnite.SDK.TypeMismatchException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.TypeMismatchException"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.TypeMismatchException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.TypeMismatchException"/>.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Playnite.SDK.ReferenceException">
            <summary>
            Represents errors related to object references.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ReferenceException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.ReferenceException"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ReferenceException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.ReferenceException"/>.
            </summary>
            <param name="message">Error message.</param>
        </member>
        <member name="T:Playnite.SDK.IPlayniteSettingsAPI">
            <summary>
            Describes application settings API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.Version">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.GridItemWidthRatio">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.GridItemHeightRatio">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.FirstTimeWizardComplete">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.DisableHwAcceleration">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.AsyncImageLoading">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.DownloadMetadataOnImport">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.StartInFullscreen">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.DatabasePath">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.MinimizeToTray">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.CloseToTray">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.EnableTray">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.Language">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.UpdateLibStartup">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.DesktopTheme">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.FullscreenTheme">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.StartMinimized">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.StartOnBoot">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.ForcePlayTimeSync">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.FontFamilyName">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.DiscordPresenceEnabled">
             <summary>
            
             </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteSettingsAPI.AgeRatingOrgPriority">
             <summary>
            
             </summary>
        </member>
        <member name="M:Playnite.SDK.IPlayniteSettingsAPI.GetGameExcludedFromImport(System.String,System.Guid)">
            <summary>
            Checks if game is added on import exclusion list.
            </summary>
            <param name="gameId">Game ID.</param>
            <param name="libraryId">Library plugin ID.</param>
            <returns>True if game is on exclusion list.</returns>
        </member>
        <member name="T:Playnite.SDK.IUriHandlerAPI">
            <summary>
            Describest API for handling playnite:// URI.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IUriHandlerAPI.RegisterSource(System.String,System.Action{Playnite.SDK.Events.PlayniteUriEventArgs})">
            <summary>
            Registers new URI source.
            </summary>
            <param name="source">Source name.</param>
            <param name="handler">Method to be executed.</param>
        </member>
        <member name="M:Playnite.SDK.IUriHandlerAPI.RemoveSource(System.String)">
            <summary>
            Removes registered source.
            </summary>
            <param name="source">Source name.</param>
        </member>
        <member name="T:Playnite.SDK.Models.AgeRatingOrg">
            <summary>
            Represents content rating organization.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.AgeRatingOrg.PEGI">
            <summary>
            PEGI - Pan European Game Information
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.AgeRatingOrg.ESRB">
            <summary>
            ESRB - Entertainment Software Rating Board
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.AppSoftware">
            <summary>
            Represents general application software.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.AppSoftware.Icon">
            <summary>
            Gets or sets application icon.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.AppSoftware.Arguments">
            <summary>
            Gets or sets application arguments.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.AppSoftware.Path">
            <summary>
            Gets or sets application path.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.AppSoftware.WorkingDir">
            <summary>
            Gets or sets application working directory.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.AppSoftware.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.AppSoftware"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.AppSoftware.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.AppSoftware"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Playnite.SDK.Models.AppSoftware.CopyDiffTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Models.IIdentifiable">
            <summary>
            Desribest object identifiable by an id.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.IIdentifiable.Id">
            <summary>
            Gets unique object identifier.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.InstallationStatus">
            <summary>
            Represents game installation status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.InstallationStatus.Installed">
            <summary>
            Game is installed.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.InstallationStatus.Uninstalled">
            <summary>
            Game is not installed.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.PastTimeSegment">
            <summary>
            Specifies past time segments.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PastTimeSegment.Today">
            <summary>
            Idicates time occurig today.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PastTimeSegment.Yesterday">
            <summary>
            Idicates time occurig yesterday.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PastTimeSegment.PastWeek">
            <summary>
            Idicates time occurig past week.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PastTimeSegment.PastMonth">
            <summary>
            Idicates time occurig past month.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PastTimeSegment.PastYear">
            <summary>
            Idicates time occurig past year.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PastTimeSegment.MoreThenYear">
            <summary>
            Idicates time occurig past year.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PastTimeSegment.Never">
            <summary>
            Idicates time that never happened.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.PlaytimeCategory">
            <summary>
            Specifies plat time categories.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PlaytimeCategory.NotPlayed">
            <summary>
            Not playtime.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PlaytimeCategory.LessThenHour">
            <summary>
            Less then an hour played.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PlaytimeCategory.O1_10">
            <summary>
            Played 1 to 10 hours.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PlaytimeCategory.O10_100">
            <summary>
            Played 10 to 100 hours.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PlaytimeCategory.O100_500">
            <summary>
            Played 100 to 500 hours.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PlaytimeCategory.O500_1000">
            <summary>
            Played 500 to 1000 hours.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.PlaytimeCategory.O1000plus">
            <summary>
            Played more then 1000 hours.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.ScoreRating">
            <summary>
            Scpecifies game score rating.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreRating.None">
            <summary>
            No score.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreRating.Negative">
            <summary>
            Negative rating.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreRating.Positive">
            <summary>
            Positive rating.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreRating.Mixed">
            <summary>
            Mixed rating.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.ScoreGroup">
            <summary>
            Scpecifies rating score groups.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O0x">
            <summary>
            Score rage from 0 to 10.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O1x">
            <summary>
            Score rage from 10 to 20.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O2x">
            <summary>
            Score rage from 20 to 30.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O3x">
            <summary>
            Score rage from 30 to 40.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O4x">
            <summary>
            Score rage from 40 to 50.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O5x">
            <summary>
            Score rage from 50 to 60.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O6x">
            <summary>
            Score rage from 60 to 70.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O7x">
            <summary>
            Score rage from 70 to 80.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O8x">
            <summary>
            Score rage from 80 to 90.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.O9x">
            <summary>
            Score rage from 90 to 100.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.ScoreGroup.None">
            <summary>
            No score.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.GameFeature">
            <summary>
            Describes fame feature object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.GameFeature.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.GameFeature"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.GameFeature.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.GameFeature"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Playnite.SDK.Models.GameFeature.Empty">
            <summary>
            Gets empty tag.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.Region">
            <summary>
            Describes Region object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Region.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Region"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Region.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Region"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Playnite.SDK.Models.Region.Empty">
            <summary>
            Gets empty region.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.GameSource">
            <summary>
            Describes GameSource object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.GameSource.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.GameSource"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.GameSource.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.GameSource"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Playnite.SDK.Models.GameSource.Empty">
            <summary>
            Gets empty game source.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.Category">
            <summary>
            Describes category object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Category.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Category"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Category.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Category"/>.
            </summary>
            <param name="name">Category name.</param>
        </member>
        <member name="F:Playnite.SDK.Models.Category.Empty">
            <summary>
            Gets empty category.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.DatabaseObject">
            <summary>
            Represents base database object item.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.DatabaseObject.Id">
            <summary>
            Gets or sets identifier of database object.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.DatabaseObject.Name">
            <summary>
            Gets or sets name.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.DatabaseObject.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.DatabaseObject"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.DatabaseObject.CompareTo(System.Object)">
            <summary>
            Compares Names of database object.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.DatabaseObject.Equals(System.Object)">
            <summary>
            DO NOT use for actual equality check, this only checks if db Ids are equal!
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.DatabaseObject.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Playnite.SDK.Models.DatabaseObject.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Playnite.SDK.Models.DatabaseObject.CopyDiffTo(System.Object)">
            <summary>
            Copies differential properties to target object intance.
            </summary>
            <param name="target">Target object instance to receive new data.</param>
        </member>
        <member name="T:Playnite.SDK.Models.GameInfo">
            <summary>
            Represents importable game data.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Name">
            <summary>
            Gets or sets name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.GameId">
            <summary>
            Gets or sets custom game identifier.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Description">
            <summary>
            Gets or sets Description.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.InstallDirectory">
            <summary>
            Gets or sets installation directory.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.GameImagePath">
            <summary>
            Gets or sets game image (rom, iso) path.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.SortingName">
            <summary>
            Gets or sets Sorting Name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.OtherActions">
            <summary>
            Gets or sets Other Actions.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.PlayAction">
            <summary>
            Gets or sets PlayAction.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.ReleaseDate">
            <summary>
            Gets or sets ReleaseDate.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Links">
            <summary>
            Gets or sets Links.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.IsInstalled">
            <summary>
            Gets or sets whether the game is installed.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Playtime">
            <summary>
            Gets or sets Playtime.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.PlayCount">
            <summary>
            Gets or sets PlayCount.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.LastActivity">
            <summary>
            Gets or sets LastActivity.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.CompletionStatus">
            <summary>
            Gets or sets CompletionStatus.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.UserScore">
            <summary>
            Gets or sets UserScore.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.CriticScore">
            <summary>
            Gets or sets CriticScore.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.CommunityScore">
            <summary>
            Gets or sets CommunityScore.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Icon">
            <summary>
            Gets or sets Icon.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.CoverImage">
            <summary>
            Gets or sets CoverImage.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.BackgroundImage">
            <summary>
            Gets or sets BackgroundImage.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Hidden">
            <summary>
            Gets or sets Hidden.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Favorite">
            <summary>
            Gets or sets Favorite.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Version">
            <summary>
            Gets or sets Version.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Series">
            <summary>
            Gets or sets Series.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.AgeRating">
            <summary>
            Gets or sets AgeRating.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Region">
            <summary>
            Gets or sets Region.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Source">
            <summary>
            Gets or sets Source.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Platform">
            <summary>
            Gets or sets Platform.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Developers">
            <summary>
            Gets or sets Developers.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Publishers">
            <summary>
            Gets or sets Publishers.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Genres">
            <summary>
            Gets or sets Genres.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Categories">
            <summary>
            Gets or sets Categories.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Tags">
            <summary>
            Gets or sets Tags.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameInfo.Features">
            <summary>
            Gets or sets game Features.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.GameInfo.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.GameInfo"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.GameInfo.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Models.Genre">
            <summary>
            Describes Genre object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Genre.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Genre"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Genre.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Genre"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Playnite.SDK.Models.Genre.Empty">
            <summary>
            Gets empty genre.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.Company">
            <summary>
            Describes Company object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Company.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Company"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Company.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Company"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Playnite.SDK.Models.Company.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.Developer">
            <summary>
            Describes Developer object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Developer.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Developer"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Developer.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Developer"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Playnite.SDK.Models.Publisher">
            <summary>
            Describes Publisher object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Publisher.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Publisher"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Publisher.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Publisher"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Playnite.SDK.Models.CompletionStatus">
            <summary>
            Represents game completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.NotPlayed">
            <summary>
            Represents "Not Played" completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.Played">
            <summary>
            Represents Played completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.Beaten">
            <summary>
            Represents Beaten completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.Completed">
            <summary>
            Represents Completed completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.Playing">
            <summary>
            Represents Playing completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.Abandoned">
            <summary>
            Represents Abandoned completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.OnHold">
            <summary>
            Represents "On hold" completion status.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.CompletionStatus.PlanToPlay">
            <summary>
            Represents "Plan to Play" completion status.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.EmulatorProfile">
            <summary>
            Represents emulator profile.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.EmulatorProfile.Platforms">
            <summary>
            Gets or sets platforms supported by profile.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.EmulatorProfile.ImageExtensions">
            <summary>
            Gets or sets file extension supported by profile.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.EmulatorProfile.Executable">
            <summary>
            Gets or sets executable path used to launch emulator.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.EmulatorProfile.Arguments">
            <summary>
            Gets or sets arguments for emulator executable.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.EmulatorProfile.WorkingDirectory">
            <summary>
            Gets or sets working directory of emulator process.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.EmulatorProfile.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.EmulatorProfile.#ctor">
            <summary>
            Creates new instance of EmulatorProfile.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.EmulatorProfile.Equals(Playnite.SDK.Models.EmulatorProfile)">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Models.Emulator">
            <summary>
            Represents system emulator.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Emulator.Profiles">
            <summary>
            Gets or sets list of emulator profiles.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Emulator.#ctor">
            <summary>
            Creates new instance of Emulator.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Emulator.#ctor(System.String)">
            <summary>
            Creates new instance of Emulator with specific name.
            </summary>
            <param name="name">Emulator name.</param>
        </member>
        <member name="M:Playnite.SDK.Models.Emulator.ToString">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.Emulator.CopyDiffTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Models.GameField">
            <summary>
            Specifies <see cref="T:Playnite.SDK.Models.Game"/> fields.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.GameField.BackgroundImage">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Description">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.GenreIds">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Hidden">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Favorite">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Icon">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CoverImage">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.InstallDirectory">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.GameImagePath">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.LastActivity">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.SortingName">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Gameid">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PluginId">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.OtherActions">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PlayAction">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PlatformId">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PublisherIds">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.DeveloperIds">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.ReleaseDate">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CategoryIds">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.TagIds">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Links">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.IsInstalling">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.IsUninstalling">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.IsLaunching">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.IsRunning">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.IsInstalled">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.IsCustomGame">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Playtime">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Added">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Modified">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PlayCount">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.SeriesId">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Version">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.AgeRatingId">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.RegionId">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.SourceId">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CompletionStatus">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.UserScore">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CriticScore">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CommunityScore">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Genres">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Developers">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Publishers">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Tags">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Categories">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Platform">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Series">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.AgeRating">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Region">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Source">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.ReleaseYear">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.ActionsScriptLanguage">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PreScript">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PostScript">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Name">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Features">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.FeatureIds">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.UseGlobalPostScript">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.UseGlobalPreScript">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.UserScoreRating">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CommunityScoreRating">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CriticScoreRating">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.UserScoreGroup">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CommunityScoreGroup">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.CriticScoreGroup">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.LastActivitySegment">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.AddedSegment">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.ModifiedSegment">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.PlaytimeCategory">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.InstallationStatus">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.None">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.GameStartedScript">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.UseGlobalGameStartedScript">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Notes">
            
        </member>
        <member name="F:Playnite.SDK.Models.GameField.Manual">
            
        </member>
        <member name="T:Playnite.SDK.Models.Game">
            <summary>
            Represents Playnite game object.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.BackgroundImage">
            <summary>
            Gets or sets background image. Local file path, HTTP URL or database file ids are supported.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Description">
            <summary>
            Gets or sets HTML game description.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Notes">
            <summary>
            Gets or sets user notes.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.GenreIds">
            <summary>
            Gets or sets list of genres.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Hidden">
            <summary>
            Gets or sets value indicating if the game is hidden in library.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Favorite">
            <summary>
            Gets or sets avlue indicating if the game is marked as favorite in library.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Icon">
            <summary>
            Gets or sets game icon. Local file path, HTTP URL or database file ids are supported.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CoverImage">
            <summary>
            Gets or sets game cover image. Local file path, HTTP URL or database file ids are supported.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.InstallDirectory">
            <summary>
            Gets or sets game installation directory path.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.GameImagePath">
            <summary>
            Gets or sets game's ISO, ROM or other type of executable image path.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.LastActivity">
            <summary>
            Gets or sets last played date.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.SortingName">
            <summary>
            Gets or sets optional name used for sorting the game by name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.GameId">
            <summary>
            Gets or sets provider id. For example game's Steam ID.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PluginId">
            <summary>
            Gets or sets id of plugin responsible for handling this game.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.OtherActions">
            <summary>
            Gets or sets list of additional game actions.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PlayAction">
            <summary>
            Gets or sets game action used to starting the game.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PlatformId">
            <summary>
            Gets or sets platform id.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PublisherIds">
            <summary>
            Gets or sets list of publishers.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.DeveloperIds">
            <summary>
            Gets or sets list of developers.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.ReleaseDate">
            <summary>
            Gets or set game's release date.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CategoryIds">
            <summary>
            Gets or sets game categories.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.TagIds">
            <summary>
            Gets or sets list of tags.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.FeatureIds">
            <summary>
            Gets or sets list of game features.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Links">
            <summary>
            Gets or sets list of game related web links.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.IsInstalling">
            <summary>
            Gets or sets value indicating wheter a game is being installed..
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.IsUninstalling">
            <summary>
            Gets or sets value indicating wheter a game is being uninstalled.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.IsLaunching">
            <summary>
            Gets or sets value indicating wheter a game is being launched.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.IsRunning">
            <summary>
            Gets or sets value indicating wheter a game is currently running.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.IsInstalled">
            <summary>
            Gets or sets value indicating wheter a game is installed.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Playtime">
            <summary>
            Gets or sets played time in seconds.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Added">
            <summary>
            Gets or sets date when game was added into library.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Modified">
            <summary>
            Gets or sets date of last modification made to a game.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PlayCount">
            <summary>
            Gets or sets a number indicating how many times the game has been played.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.SeriesId">
            <summary>
            Gets or sets game series.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Version">
            <summary>
            Gets or sets game version.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.AgeRatingId">
            <summary>
            Gets or sets age rating for a game.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.RegionId">
            <summary>
            Gets or sets game region.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.SourceId">
            <summary>
            Gets or sets source of the game.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CompletionStatus">
            <summary>
            Gets or sets game completion status.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.UserScore">
            <summary>
            Gets or sets user's rating score.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CriticScore">
            <summary>
            Gets or sets critic based rating score.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CommunityScore">
            <summary>
            Gets or sets community rating score.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.ActionsScriptLanguage">
            <summary>
            Gets or sets scripting language for <see cref="P:Playnite.SDK.Models.Game.PreScript"/> and <see cref="P:Playnite.SDK.Models.Game.PostScript"/> scripts.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PreScript">
            <summary>
            Gets or sets pre-action script.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PostScript">
            <summary>
            Gets or sets post-action script.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.GameStartedScript">
            <summary>
            Gets or sets script to be executed after game started.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.UseGlobalPostScript">
            <summary>
            Gets or sets value indicating whether global post script should be executed.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.UseGlobalPreScript">
            <summary>
            Gets or sets value indicating whether global pre script should be executed.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.UseGlobalGameStartedScript">
            <summary>
            Gets or sets value indicating whether global pre script should be executed.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Manual">
            <summary>
            Gets or sets game manual.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Genres">
            <summary>
            Gets game's genres.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Developers">
            <summary>
            Gets game's developers.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Publishers">
            <summary>
            Gets game's publishers.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Tags">
            <summary>
            Gets game's tags.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Features">
            <summary>
            Gets game's features.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Categories">
            <summary>
            Gets game's categories.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Platform">
            <summary>
            Gets game's platform.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Series">
            <summary>
            Gets game's series.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.AgeRating">
            <summary>
            Get game's age rating.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Region">
            <summary>
            Gets game's region.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.Source">
            <summary>
            Gets game's source.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.ReleaseYear">
            <summary>
            Gets game's release year.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.UserScoreRating">
            <summary>
            Gets game's user score rating.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CommunityScoreRating">
            <summary>
            Gets game's community score rating.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CriticScoreRating">
            <summary>
            Gets game's critic score rating.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.UserScoreGroup">
            <summary>
            Gets game's user score group.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CommunityScoreGroup">
            <summary>
            Gets game's community score group.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.CriticScoreGroup">
            <summary>
            Gets game's critic score group.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.LastActivitySegment">
            <summary>
            Gets time segment for games last activity.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.AddedSegment">
            <summary>
            Gets time segment for games added date.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.ModifiedSegment">
            <summary>
            Gets time segment for games modified date..
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.PlaytimeCategory">
            <summary>
            Gets game's play time category.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.IsCustomGame">
            <summary>
            Gets value indicating wheter the game is custom game.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Game.InstallationStatus">
            <summary>
            Gets game installation state.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Game.GetPlayTimeCategory(System.Int64)">
            <summary>
            Gets play time category.
            </summary>
            <param name="seconds">Play time in seconds.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.Game.GetPastTimeSegment(System.Nullable{System.DateTime})">
            <summary>
            Gets time segment.
            </summary>
            <param name="dateTime">Date time to be measured.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.Game.GetScoreRating(System.Nullable{System.Int32})">
            <summary>
            Gets score rating.
            </summary>
            <param name="score">Score.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.Game.GetScoreGroup(System.Nullable{System.Int32})">
            <summary>
            Gets score group.
            </summary>
            <param name="score">Score.</param>
            <returns></returns>
        </member>
        <member name="P:Playnite.SDK.Models.Game.DatabaseReference">
            <summary>
            Gets or sets game database reference.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Game.#ctor">
            <summary>
            Creates new instance of a Game object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Game.#ctor(System.String)">
            <summary>
            Creates new instance of a Game object with specific name.
            </summary>
            <param name="name">Game name.</param>
        </member>
        <member name="M:Playnite.SDK.Models.Game.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Playnite.SDK.Models.Game.CopyDiffTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Playnite.SDK.Models.Game.GetDifferences(Playnite.SDK.Models.Game)">
            <summary>
            Get differecens in game objects.
            </summary>
            <param name="otherGame">Game object to compare to.</param>
            <returns>List of field that differ.</returns>
        </member>
        <member name="T:Playnite.SDK.Models.GameActionType">
            <summary>
            Represents game action type.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.GameActionType.File">
            <summary>
            Game action executes a file.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.GameActionType.URL">
            <summary>
            Game action navigates to a web based URL.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Models.GameActionType.Emulator">
            <summary>
            Game action starts an emulator.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.GameAction">
            <summary>
            Represents executable game action.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.Type">
            <summary>
            Gets or sets task type.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.Arguments">
            <summary>
            Gets or sets executable arguments for File type tasks.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.AdditionalArguments">
            <summary>
            Gets or sets additional executable arguments used for Emulator action type.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.OverrideDefaultArgs">
            <summary>
            Gets or sets value indicating wheter emulator arguments should be completely overwritten with action arguments.
            Applies only to Emulator action type.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.Path">
            <summary>
            Gets or sets executable path for File action type or URL for URL action type.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.WorkingDir">
            <summary>
            Gets or sets working directory for File action type executable.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.Name">
            <summary>
            Gets or sets action name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.IsHandledByPlugin">
            <summary>
            Gets or sets value indicating wheter a action's execution should be handled by a plugin.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.EmulatorId">
            <summary>
            Gets or sets emulator id for Emulator action type execution.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.GameAction.EmulatorProfileId">
            <summary>
            Gets or sets emulator profile id for Emulator action type execution.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.GameAction.ToString">
            <inheritdoc/>
        </member>
        <member name="M:Playnite.SDK.Models.GameAction.Equals(Playnite.SDK.Models.GameAction,Playnite.SDK.Models.GameAction)">
            <summary>
            Compares two <see cref="T:Playnite.SDK.Models.GameAction"/> objects for equality.
            </summary>
            <param name="obj1"></param>
            <param name="obj2"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Models.GameAction.Equals(Playnite.SDK.Models.GameAction)">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Models.Link">
            <summary>
            Represents web link.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Link.Name">
            <summary>
            Gets or sets name of the link.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Link.Url">
            <summary>
            Gets or sets web based URL.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Link.#ctor">
            <summary>
            Creates new instance of Link.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Link.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of Link with specific values.
            </summary>
            <param name="name">Link name.</param>
            <param name="url">Link URL.</param>
        </member>
        <member name="M:Playnite.SDK.Models.Link.Equals(Playnite.SDK.Models.Link)">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Models.Platform">
            <summary>
            Represents game's platfom.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Platform.Icon">
            <summary>
            Gets or sets platform icon.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Platform.Cover">
            <summary>
            Gets or sets default game cover.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Models.Platform.Background">
            <summary>
            Gets or sets default game background image.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Platform.#ctor">
            <summary>
            Creates new instance of Platform.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Platform.#ctor(System.String)">
            <summary>
            Creates new instance of Platform with specific name.
            </summary>
            <param name="name">Platform name.</param>
        </member>
        <member name="M:Playnite.SDK.Models.Platform.ToString">
            <inheritdoc/>
        </member>
        <member name="F:Playnite.SDK.Models.Platform.Empty">
            <summary>
            Gets empty platform.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Platform.CopyDiffTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Models.AgeRating">
            <summary>
            Describes age rating object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.AgeRating.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.AgeRating"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.AgeRating.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.AgeRating"/>.
            </summary>
            <param name="name">Rating name.</param>
        </member>
        <member name="F:Playnite.SDK.Models.AgeRating.Empty">
            <summary>
            Gets empty age rating.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.Series">
            <summary>
            Describes Series object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Series.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Series"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Series.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Series"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Playnite.SDK.Models.Series.Empty">
            <summary>
            Gets empty series.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Models.Tag">
            <summary>
            Describes Tag object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Tag.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Tag"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Models.Tag.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Models.Tag"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="F:Playnite.SDK.Models.Tag.Empty">
            <summary>
            Gets empty tag.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.PluginMenuItem">
            <summary>
            Represents base class for plugin menu item.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.PluginMenuItem.Icon">
            <summary>
            Gets or sets menu item icon.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.PluginMenuItem.Description">
            <summary>
            Gets or sets menu item description.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.PluginMenuItem.MenuSection">
            <summary>
            Gets or sets meni item menu section.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.PluginMenuItem.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.Plugins.GameMenuItemActionArgs">
            <summary>
            Represents arguments object used when game menu item action is activated.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.GameMenuItemActionArgs.Games">
            <summary>
            Gets or sets source games.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.GameMenuItemActionArgs.SourceItem">
            <summary>
            Gets or sets source menu item.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.ScriptGameMenuItemActionArgs">
            <summary>
            Represents arguments object used when game menu item action is activated.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.ScriptGameMenuItemActionArgs.Games">
            <summary>
            Gets or sets source games.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.ScriptGameMenuItemActionArgs.SourceItem">
            <summary>
            Gets or sets source menu item.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.GameMenuItem">
            <summary>
            Represents game menu item.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.GameMenuItem.Action">
            <summary>
            Gets or sets action to be invoked when menu item is activated.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.GameMenuItem.FromScriptGameMenuItem(Playnite.SDK.Plugins.ScriptGameMenuItem)">
            <summary>
            Creates game menu item from script game menu item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Plugins.ScriptGameMenuItem">
            <summary>
            Represents script game menu item.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.ScriptGameMenuItem.FunctionName">
            <summary>
            Gets or sets function to be executed when menu item is activated.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.GetGameMenuItemsArgs">
            <summary>
            Represents arguments for getting game menu items.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.GetGameMenuItemsArgs.Games">
            <summary>
            Gets or sets source games for target menu items.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.ScriptMainMenuItemActionArgs">
            <summary>
            Represents arguments object used when main menu item action is activated.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.ScriptMainMenuItemActionArgs.SourceItem">
            <summary>
            Gets or sets source menu item.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.MainMenuItemActionArgs">
            <summary>
            Represents arguments object used when main menu item action is activated.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.MainMenuItemActionArgs.SourceItem">
            <summary>
            Gets or sets source menu item.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.MainMenuItem">
            <summary>
            Represents main menu item.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.MainMenuItem.Action">
            <summary>
            Gets or sets action to be invoked when menu item is activated.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.MainMenuItem.FromScriptMainMenuItem(Playnite.SDK.Plugins.ScriptMainMenuItem)">
            <summary>
            Creates main menu item from script main menu item.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Plugins.ScriptMainMenuItem">
            <summary>
             Represents script main menu item.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.ScriptMainMenuItem.FunctionName">
            <summary>
            Gets or sets function to be executed when menu item is activated.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.GetMainMenuItemsArgs">
            <summary>
            Represents arguments for getting main menu items.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.MetadataField">
            <summary>
            Represents metadata game fields.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Name">
            <summary>
            Name can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Genres">
            <summary>
            Genres can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.ReleaseDate">
            <summary>
            Release Data can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Developers">
            <summary>
            List of Developers can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Publishers">
            <summary>
            List of Publishers can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Tags">
            <summary>
            List of Tags can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Description">
            <summary>
            Description can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Links">
            <summary>
            List of associated Links can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.CriticScore">
            <summary>
            Critics Score can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.CommunityScore">
            <summary>
            Community Score can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Icon">
            <summary>
            Icon can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.CoverImage">
            <summary>
            Cover Image can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.BackgroundImage">
            <summary>
            Background Image can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Features">
            <summary>
            List of Features can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.AgeRating">
            <summary>
            Age Rating can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Series">
            <summary>
            Name of the Series can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Region">
            <summary>
            Region can be provided.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.MetadataField.Platform">
            <summary>
            Platform can be provided.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.MetadataRequestOptions">
            <summary>
            Represents options for game metadata download.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.MetadataRequestOptions.GameData">
            <summary>
            Gets or sets game data are being requested for.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.MetadataRequestOptions.IsBackgroundDownload">
            <summary>
            Gets or sets value indicating whether the request is part of bulk metadata download.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.MetadataRequestOptions.#ctor(Playnite.SDK.Models.Game,System.Boolean)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Plugins.MetadataRequestOptions"/>.
            </summary>
            <param name="gameData"></param>
            <param name="backgroundDownload"></param>
        </member>
        <member name="T:Playnite.SDK.Plugins.OnDemandMetadataProvider">
            <summary>
            Represents metadata class providing specific fields when requested.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.OnDemandMetadataProvider.AvailableFields">
            <summary>
             Gets currently available fields.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetName">
            <summary>
            Gets name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetGenres">
            <summary>
            Gets genres.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetReleaseDate">
            <summary>
            Gets relese date.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetDevelopers">
            <summary>
            Gets developers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetPublishers">
            <summary>
            Gets publishers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetTags">
            <summary>
            Gets tags.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetDescription">
            <summary>
            Gets descriptions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetCriticScore">
            <summary>
            Gets critic score.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetCommunityScore">
            <summary>
            Gets community score.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetCoverImage">
            <summary>
            Gets cover image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetIcon">
            <summary>
            Gets icon image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetBackgroundImage">
            <summary>
            Gets background image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetLinks">
            <summary>
            Gets links.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetFeatures">
            <summary>
            Gets features.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetAgeRating">
            <summary>
            Gets age rating.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetSeries">
            <summary>
            Gets series.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetRegion">
            <summary>
            Gets region.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.OnDemandMetadataProvider.GetPlatform">
            <summary>
            Gets platform.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Plugins.MetadataPlugin">
            <summary>
            Represents plugin providing game metadata.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.MetadataPlugin.Name">
            <summary>
            Gets metadata source name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.MetadataPlugin.SupportedFields">
            <summary>
            Gets list of game fields this metadata provider can provide.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.MetadataPlugin.#ctor(Playnite.SDK.IPlayniteAPI)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Plugins.MetadataPlugin"/>.
            </summary>
            <param name="playniteAPI"></param>
        </member>
        <member name="M:Playnite.SDK.Plugins.MetadataPlugin.GetMetadataProvider(Playnite.SDK.Plugins.MetadataRequestOptions)">
            <summary>
            Gets metadata provider.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.Plugins.LibraryPluginCapabilities">
            <summary>
            Represents capabilities of a library plugin.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.LibraryPluginCapabilities.CanShutdownClient">
            <summary>
            Gets or sets value indicating whether plugin is capable of closing down original game client.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.LibraryPluginCapabilities.HasCustomizedGameImport">
            <summary>
            Gets or sets value indicated whether plugin uses customized mechanism for game import.
            </summary>
        </member>
        <member name="T:Playnite.SDK.Plugins.LibraryPlugin">
            <summary>
            Represents base game library plugin.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.LibraryPlugin.#ctor(Playnite.SDK.IPlayniteAPI)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Plugins.LibraryPlugin"/>.
            </summary>
            <param name="playniteAPI"></param>
        </member>
        <member name="P:Playnite.SDK.Plugins.LibraryPlugin.Name">
            <summary>
            Gets library name;
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.LibraryPlugin.LibraryIcon">
            <summary>
            Gets library icon or null if no icon is available.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Playnite.SDK.Plugins.LibraryPlugin.LibraryBackground">
            <summary>
            Gets library background image or null if no background is available.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Playnite.SDK.Plugins.LibraryPlugin.Client">
            <summary>
            Gets library client application or null of no client is associated with this library.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.LibraryPlugin.Capabilities">
            <summary>
            Gets plugin's library capabilities.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.LibraryPlugin.GetGames">
            <summary>
            Gets library games.
            </summary>
            <returns>List of library games.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.LibraryPlugin.ImportGames">
            <summary>
            Initiates game import if "HasCustomizedGameImport" capability is enabled.
            </summary>
            <returns>List of newly imported games.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.LibraryPlugin.GetGameController(Playnite.SDK.Models.Game)">
            <summary>
            Gets controller responsible for handling of library game or null if no specific controller is available.
            </summary>
            <param name="game">Game to be handled.</param>
            <returns>Game controller.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.LibraryPlugin.GetMetadataDownloader">
            <summary>
            Gets library metadata downloader or null if no metadata provider is available.
            </summary>
            <returns>Metadata downloader.</returns>
        </member>
        <member name="T:Playnite.SDK.Plugins.Plugin">
            <summary>
            Represents base Playnite plugin.
            </summary>
        </member>
        <member name="F:Playnite.SDK.Plugins.Plugin.PlayniteApi">
            <summary>
            Gets instance of runtime <see cref="T:Playnite.SDK.IPlayniteAPI"/>.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Plugins.Plugin.Id">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.#ctor(Playnite.SDK.IPlayniteAPI)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Plugins.Plugin"/>.
            </summary>
            <param name="playniteAPI">Instance of Playnite API to be injected.</param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.GetSettings(System.Boolean)">
            <summary>
            Gets plugin settings or null if plugin doesn't provide any settings.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.GetSettingsView(System.Boolean)">
            <summary>
            Gets plugin settings view or null if plugin doesn't provide settings view.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.GetFunctions">
            <summary>
            Returns list of plugin functions.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnGameStarting(Playnite.SDK.Models.Game)">
            <summary>
            Called before game is started.
            </summary>
            <param name="game">Game that will be started.</param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnGameStarted(Playnite.SDK.Models.Game)">
            <summary>
            Called when game has started.
            </summary>
            <param name="game">Game that started.</param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnGameStopped(Playnite.SDK.Models.Game,System.Int64)">
            <summary>
            Called when game stopped running.
            </summary>
            <param name="game">Game that stopped running.</param>
            <param name="ellapsedSeconds">Time in seconds of how long the game was running.</param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnGameInstalled(Playnite.SDK.Models.Game)">
            <summary>
            Called when game has been installed.
            </summary>
            <param name="game">Game that's been installed.</param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnGameUninstalled(Playnite.SDK.Models.Game)">
            <summary>
            Called when game has been uninstalled.
            </summary>
            <param name="game">Game that's been uninstalled.</param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnGameSelected(Playnite.SDK.Events.GameSelectionEventArgs)">
            <summary>
            Called when game selection changed.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnApplicationStarted">
            <summary>
            Called when appliaction is started and initialized.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnApplicationStopped">
            <summary>
            Called when appliaction is stutting down.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OnLibraryUpdated">
            <summary>
            Called library update has been finished.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.GetGameMenuItems(Playnite.SDK.Plugins.GetGameMenuItemsArgs)">
            <summary>
            Gets list of items to be displayed in game's context menu.
            </summary>
            <param name="args">Contextual arguments.</param>
            <returns>List of menu items to be displayed in game menu.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.GetMainMenuItems(Playnite.SDK.Plugins.GetMainMenuItemsArgs)">
            <summary>
            Gets list of items to be displayed in Playnite's main menu.
            </summary>
            <param name="args">Contextual arguments.</param>
            <returns>List of menu items to be displayed in Playnite's main menu.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.GetPluginUserDataPath">
            <summary>
            Gets path dedicated for plugins to store data.
            </summary>
            <returns>Full directory path.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.GetPluginConfiguration``1">
            <summary>
            Gets plugin configuration stored in plugin.cfg file.
            </summary>
            <typeparam name="TConfig">Plugin configuration type.</typeparam>
            <returns>Plugin configuration.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.LoadPluginSettings``1">
            <summary>
            Gets plugin settings.
            </summary>
            <typeparam name="TSettings">Plugin settings type.</typeparam>
            <returns>Plugin settings.</returns>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.SavePluginSettings``1(``0)">
            <summary>
            Saves plugin settings.
            </summary>
            <typeparam name="TSettings">Plugin settings type.</typeparam>
            <param name="settings">Source plugin.</param>
        </member>
        <member name="M:Playnite.SDK.Plugins.Plugin.OpenSettingsView">
            <summary>
            Opens plugin's settings view. Only works in Desktop application mode!
            </summary>
            <returns>True if user saved any changes, False if dialog was canceled.</returns>
        </member>
        <member name="T:Playnite.SDK.RelayCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:Playnite.SDK.RelayCommand.Gesture">
            <summary>
            
            </summary>
        </member>
        <member name="P:Playnite.SDK.RelayCommand.GestureText">
            <summary>
            
            </summary>
        </member>
        <member name="E:Playnite.SDK.RelayCommand.CanExecuteChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:Playnite.SDK.RelayCommand.CanExecute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.RelayCommand.Execute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Playnite.SDK.RelayCommand`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Playnite.SDK.RelayCommand`1.#ctor(System.Action{`0})">
            <summary>
            
            </summary>
            <param name="execute"></param>
        </member>
        <member name="M:Playnite.SDK.RelayCommand`1.#ctor(System.Action{`0},System.Windows.Input.KeyGesture)">
            <summary>
            
            </summary>
            <param name="execute"></param>
            <param name="gesture"></param>
        </member>
        <member name="M:Playnite.SDK.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0})">
            <summary>
            
            </summary>
            <param name="execute"></param>
            <param name="canExecute"></param>
        </member>
        <member name="M:Playnite.SDK.RelayCommand`1.#ctor(System.Action{`0},System.Predicate{`0},System.Windows.Input.KeyGesture)">
            <summary>
            
            </summary>
            <param name="execute"></param>
            <param name="canExecute"></param>
            <param name="gesture"></param>
        </member>
        <member name="M:Playnite.SDK.RelayCommand`1.CanExecute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.RelayCommand`1.Execute(System.Object)">
            <summary>
            
            </summary>
            <param name="parameter"></param>
        </member>
        <member name="T:Playnite.SDK.ResourceProvider">
            <summary>
            Represents default resource provider.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ResourceProvider.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.ResourceProvider"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ResourceProvider.GetString(System.String)">
            <summary>
            Gets string resource.
            </summary>
            <param name="key">String resource key.</param>
            <returns>String resource.</returns>
        </member>
        <member name="M:Playnite.SDK.ResourceProvider.GetResource(System.String)">
            <summary>
            Gets application resource.
            </summary>
            <param name="key">Resource key.</param>
            <returns>Application resource.</returns>
        </member>
        <member name="T:Playnite.SDK.ExpandableVariables">
            <summary>
            Represents object with definitions of available expandable game variables.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.InstallationDirectory">
            <summary>
            Gets variable name for game's installation directory path.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.InstallationDirName">
            <summary>
            Gets variable name for game's installation directory name.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.ImagePath">
            <summary>
            Gets variable name for game's image path.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.ImageNameNoExtension">
            <summary>
            Gets variable name for game's image file name without extension.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.ImageName">
            <summary>
            Gets variable name for game's image file name.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.PlayniteDirectory">
            <summary>
            Gets variable name for Playnite's installation directory path.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.Name">
            <summary>
            Gets variable for game's name.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.Platform">
            <summary>
            Gets variable for game's platform.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.GameId">
            <summary>
            Gets variable for game's ID.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.DatabaseId">
            <summary>
            Gets variable for game's database ID.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.PluginId">
            <summary>
            Gets variable for game's library plugin ID.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ExpandableVariables.Version">
            <summary>
            Gets variable for game's version.
            </summary>
        </member>
        <member name="T:Playnite.SDK.MessageBoxOption">
            <summary>
            Represents message box response options.
            </summary>
        </member>
        <member name="P:Playnite.SDK.MessageBoxOption.Title">
            <summary>
            Gets or sets title of response option.
            </summary>
        </member>
        <member name="P:Playnite.SDK.MessageBoxOption.IsDefault">
            <summary>
            Gets or sets value indicating whether this is default option.
            </summary>
        </member>
        <member name="P:Playnite.SDK.MessageBoxOption.IsCancel">
            <summary>
            Gets or sets value indicating whether this is option to cancel the request.
            </summary>
        </member>
        <member name="M:Playnite.SDK.MessageBoxOption.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.MessageBoxOption"/>.
            </summary>
            <param name="title"></param>
            <param name="isDefault"></param>
            <param name="isCancel"></param>
        </member>
        <member name="T:Playnite.SDK.GlobalProgressActionArgs">
            <summary>
            Represents arguments for global progress action.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressActionArgs.MainContext">
            <summary>
            Gets synchronization context of main thread.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressActionArgs.MainDispatcher">
            <summary>
            Gets dispatcher for main UI thread.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressActionArgs.CancelToken">
            <summary>
            Gets cancelation token source.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressActionArgs.ProgressMaxValue">
            <summary>
            Gets or sets maximum value represented on progress track.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressActionArgs.CurrentProgressValue">
            <summary>
            Gets or sets currect value represented on progress track.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressActionArgs.Text">
            <summary>
            Gets or sets progress text.
            </summary>
        </member>
        <member name="M:Playnite.SDK.GlobalProgressActionArgs.#ctor(System.Threading.SynchronizationContext,System.Windows.Threading.Dispatcher,System.Threading.CancellationTokenSource)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.GlobalProgressActionArgs"/>.
            </summary>
            <param name="mainContext"></param>
            <param name="mainDispatcher"></param>
            <param name="cancelToken"></param>
        </member>
        <member name="T:Playnite.SDK.GlobalProgressResult">
            <summary>
            Represents result of global progress dialog.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressResult.Error">
            <summary>
            Gets failure exception record.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressResult.Result">
            <summary>
            Gets execution result.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressResult.Canceled">
            <summary>
            Gets value indicating whether the action was canceled by user.
            </summary>
        </member>
        <member name="M:Playnite.SDK.GlobalProgressResult.#ctor(System.Nullable{System.Boolean},System.Boolean,System.Exception)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.GlobalProgressResult"/>.
            </summary>
            <param name="result"></param>
            <param name="canceled"></param>
            <param name="error"></param>
        </member>
        <member name="T:Playnite.SDK.GlobalProgressOptions">
            <summary>
            Represents option for global progress dialog.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressOptions.Text">
            <summary>
            Gets or sets progress text.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressOptions.Cancelable">
            <summary>
            Gets or sets value indicating whether the progress can be canceled.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GlobalProgressOptions.IsIndeterminate">
            <summary>
            Gets or sets value indicating whether the progress is indeterminated.
            </summary>
        </member>
        <member name="M:Playnite.SDK.GlobalProgressOptions.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.GlobalProgressOptions"/>.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Playnite.SDK.GlobalProgressOptions.#ctor(System.String,System.Boolean)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.GlobalProgressOptions"/>.
            </summary>
            <param name="text"></param>
            <param name="cancelable"></param>
        </member>
        <member name="T:Playnite.SDK.ImageFileOption">
            <summary>
            Represents item for image selection dialog.
            </summary>
        </member>
        <member name="P:Playnite.SDK.ImageFileOption.Path">
            <summary>
            Gets or sets image path or URL.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ImageFileOption.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.ImageFileOption"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ImageFileOption.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.ImageFileOption"/>.
            </summary>
            <param name="path"></param>
        </member>
        <member name="T:Playnite.SDK.GenericItemOption">
            <summary>
            Represents item for item selection dialogs.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GenericItemOption.Name">
            <summary>
            Gets or sets game name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.GenericItemOption.Description">
            <summary>
            Gets or sets search result's description.
            </summary>
        </member>
        <member name="M:Playnite.SDK.GenericItemOption.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.GenericItemOption"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.GenericItemOption.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.GenericItemOption"/>.
            </summary>
            <param name="name"></param>
            <param name="description"></param>
        </member>
        <member name="T:Playnite.SDK.StringSelectionDialogResult">
            <summary>
            Refresents result of selection string dialog operation.
            </summary>
        </member>
        <member name="P:Playnite.SDK.StringSelectionDialogResult.Result">
            <summary>
            Gets or sets dialog result. True if user confirmed selected otherwise false.
            </summary>
        </member>
        <member name="P:Playnite.SDK.StringSelectionDialogResult.SelectedString">
            <summary>
            Gets or sets string selected by user.
            </summary>
        </member>
        <member name="M:Playnite.SDK.StringSelectionDialogResult.#ctor(System.Boolean,System.String)">
            <summary>
            Creates new instance of StringSelectionDialogResult.
            </summary>
            <param name="result">Dialog result.</param>
            <param name="selectedString">Selected string.</param>
        </member>
        <member name="T:Playnite.SDK.WindowCreationOptions">
            <summary>
            Represents option for new window creation.
            </summary>
        </member>
        <member name="P:Playnite.SDK.WindowCreationOptions.ShowMinimizeButton">
            <summary>
            Gets or sets value indicating whether the minimize button should be shown.
            </summary>
        </member>
        <member name="P:Playnite.SDK.WindowCreationOptions.ShowMaximizeButton">
            <summary>
            Gets or sets value indicating whether the maximize button should be shown.
            </summary>
        </member>
        <member name="P:Playnite.SDK.WindowCreationOptions.ShowCloseButton">
            <summary>
            Gets or sets value indicating whether the close button should be shown.
            </summary>
        </member>
        <member name="T:Playnite.SDK.IDialogsFactory">
            <summary>
            Describes object providing methods for dialog based actions.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ShowErrorMessage(System.String,System.String)">
            <summary>
            Displays errod dialog window with text message.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <param name="caption">Dialog window caption.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ShowMessage(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
            <summary>
            Displays dialog window with text message.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <param name="caption">Dialog window caption.</param>
            <param name="button">Available response button.</param>
            <param name="icon">Dialog icon.</param>
            <returns>Selected dialog response.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ShowMessage(System.String,System.String,System.Windows.MessageBoxButton)">
            <summary>
            Displays dialog window with text message.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <param name="caption">Dialog window caption.</param>
            <param name="button">Available response button.</param>
            <returns>Selected dialog response.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ShowMessage(System.String,System.String)">
            <summary>
            Displays dialog window with text message.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <param name="caption">Dialog window caption.</param>
            <returns>Selected dialog response.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ShowMessage(System.String)">
            <summary>
            Displays dialog window with text message.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <returns>Selected dialog response.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ShowMessage(System.String,System.String,System.Windows.MessageBoxImage,System.Collections.Generic.List{Playnite.SDK.MessageBoxOption})">
            <summary>
            Displays dialog window custom response options.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <param name="caption">Dialog window caption.</param>
            <param name="icon">Dialog icon.</param>
            <param name="options">Response options.</param>
            <returns>Selected dialog option.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SelectFolder">
            <summary>
            Displays system dialog for folder selection.
            </summary>
            <returns>Selected folder path or empty string if user cancels the dialog.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SelectFile(System.String)">
            <summary>
            Displays system open file dialog.
            </summary>
            <param name="filter">File filter, for example "ZIP Archive|*.zip"</param>
            <returns>Selected file path or empty string if user cancels the dialog.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SelectFiles(System.String)">
            <summary>
            Displays system open file dialog allowing to select multiple files.
            </summary>
            <param name="filter">File filter, for example "ZIP Archive|*.zip"</param>
            <returns>List of paths or null if user cancels the dialog.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SelectIconFile">
            <summary>
            Displays file open dialog with file filter set to show only image files used for icons.
            </summary>
            <returns>Selected icon path or empty string if user cancels the dialog.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SelectImagefile">
            <summary>
            Displays file open dialog with file filter set to show only image files.
            </summary>
            <returns>Selected image path or empty string if user cancels the dialog.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SaveFile(System.String)">
            <summary>
            Displays system file save dialog.
            </summary>
            <param name="filter">File filter, for example "ZIP Archive|*.zip"</param>
            <returns>Selected file path or empty string if user cancels the dialog.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SaveFile(System.String,System.Boolean)">
            <summary>
            Displays system file save dialog.
            </summary>
            <param name="filter">File filter, for example "ZIP Archive|*.zip"</param>
            <param name="promptOverwrite">Indicates whether to ask user for file overrite if selected path exists.</param>
            <returns>Selected file path or empty string if user cancels the dialog.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.SelectString(System.String,System.String,System.String)">
            <summary>
            Displays dialog asking user to input text string.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <param name="caption">Dialog window caption.</param>
            <param name="defaultInput">Default string presented in input field.</param>
            <returns>Selection result.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ShowSelectableString(System.String,System.String,System.String)">
            <summary>
            Displays dialog with textbox allowing to select/copy text.
            </summary>
            <param name="messageBoxText">Dialog message text.</param>
            <param name="caption">Dialog window caption.</param>
            <param name="defaultInput">String added into selectable field.</param>
            <returns>Selection result.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ChooseImageFile(System.Collections.Generic.List{Playnite.SDK.ImageFileOption},System.String,System.Double,System.Double)">
            <summary>
            Displays dialog with an option to choose single image.
            </summary>
            <param name="files"></param>
            <param name="caption"></param>
            <param name="itemWidth"></param>
            <param name="itemHeight"></param>
            <returns>Null if dialog was canceled otherwise selected <see cref="T:Playnite.SDK.ImageFileOption"/> object.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ChooseItemWithSearch(System.Collections.Generic.List{Playnite.SDK.GenericItemOption},System.Func{System.String,System.Collections.Generic.List{Playnite.SDK.GenericItemOption}},System.String,System.String)">
            <summary>
            Displays dialog with an option to choose single item and option to search for different items.
            </summary>
            <param name="items"></param>
            <param name="searchFunction"></param>
            <param name="defaultSearch"></param>
            <param name="caption"></param>
            <returns>Null if dialog was canceled otherwise selected <see cref="T:Playnite.SDK.GenericItemOption"/> object.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.ActivateGlobalProgress(System.Action{Playnite.SDK.GlobalProgressActionArgs},Playnite.SDK.GlobalProgressOptions)">
            <summary>
            Activates progress dialog blocking app interaction until progress is finished or canceled.
            </summary>
            <param name="progresAction">Action to be executed.</param>
            <param name="progressOptions">Options for progress dialog.</param>
            <returns>Status of the action execution.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.CreateWindow(Playnite.SDK.WindowCreationOptions)">
            <summary>
            Creates new window with Playnite's default styling applied.
            </summary>
            <param name="options">Custom window options.</param>
            <returns>New window instance.</returns>
        </member>
        <member name="M:Playnite.SDK.IDialogsFactory.GetCurrentAppWindow">
            <summary>
            Gets a window which currently in use an active.
            </summary>
            <returns>Window object.</returns>
        </member>
        <member name="T:Playnite.SDK.ExtensionFunction">
            <summary>
            Represents executable function.
            </summary>
        </member>
        <member name="P:Playnite.SDK.ExtensionFunction.Name">
            <summary>
            Gets or sets function name.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ExtensionFunction.#ctor(System.String)">
            <summary>
            Creates new instance of ExtensionFunction with specified name.
            </summary>
            <param name="name">Function name.</param>
        </member>
        <member name="M:Playnite.SDK.ExtensionFunction.#ctor(System.String,System.Action)">
            <summary>
            Creates new instance of ExtensionFunction with specified name and method to execute.
            </summary>
            <param name="name">Function name.</param>
            <param name="func">Method to be executed.</param>
        </member>
        <member name="M:Playnite.SDK.ExtensionFunction.Invoke">
            <summary>
            Invokes function.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ExtensionFunction.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Playnite.SDK.IGameController">
            <summary>
            Describes game controller.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameController.IsGameRunning">
            <summary>
            Gets value indicating wheter the game is running.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameController.Game">
            <summary>
            Gets game being handled.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IGameController.Install">
            <summary>
            Installs game.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IGameController.Uninstall">
            <summary>
            Uninstalls game.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IGameController.Play">
            <summary>
            Starts game.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IGameController.Starting">
            <summary>
            Occurs when game is being started.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IGameController.Started">
            <summary>
            Occurs when game is started.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IGameController.Stopped">
            <summary>
            Occurs when game stops running.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IGameController.Uninstalled">
            <summary>
            Occurs when game is finished uninstalling.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IGameController.Installed">
            <summary>
            Occurs when game is finished installing.
            </summary>
        </member>
        <member name="T:Playnite.SDK.IGameDatabaseAPI">
            <summary>
            Describes object providing game database API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IGameDatabaseAPI.DatabasePath">
            <summary>
            Gets full path to database directory location.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IGameDatabaseAPI.AddFile(System.String,System.Guid)">
            <summary>
            Add file to data storage.
            </summary>
            <param name="path">Path of the file to be added.</param>
            <param name="parentId">Databse item parent containning the file.</param>
            <returns>Database id of added file.</returns>
        </member>
        <member name="M:Playnite.SDK.IGameDatabaseAPI.SaveFile(System.String,System.String)">
            <summary>
            Exports file from database.
            </summary>
            <param name="id">File id.</param>
            <param name="path">Full path to target file.</param>
        </member>
        <member name="M:Playnite.SDK.IGameDatabaseAPI.RemoveFile(System.String)">
            <summary>
            Removes file from database.
            </summary>
            <param name="id">File id.</param>
        </member>
        <member name="M:Playnite.SDK.IGameDatabaseAPI.BufferedUpdate">
            <summary>
            Switches database to buffered mode. Suppresses all notification events until buffering is stopped.
            </summary>
            <returns>Buffer object.</returns>
        </member>
        <member name="M:Playnite.SDK.IGameDatabaseAPI.GetFileStoragePath(System.Guid)">
            <summary>
            Returns full path to directory storing files for specified parent.
            </summary>
            <param name="parentId">Id of parent object.</param>
            <returns>Full path to directory.</returns>
        </member>
        <member name="M:Playnite.SDK.IGameDatabaseAPI.GetFullFilePath(System.String)">
            <summary>
            Return full path to a file based on database path.
            </summary>
            <param name="databasePath">Database path as set to game's field.</param>
            <returns>Full path to a file.</returns>
        </member>
        <member name="T:Playnite.SDK.LibraryClient">
            <summary>
            Describes library client application.
            </summary>
        </member>
        <member name="P:Playnite.SDK.LibraryClient.IsInstalled">
            <summary>
            Gets value indicating wheter the client is installed.
            </summary>
        </member>
        <member name="P:Playnite.SDK.LibraryClient.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="M:Playnite.SDK.LibraryClient.Open">
            <summary>
            Open client application.
            </summary>
        </member>
        <member name="M:Playnite.SDK.LibraryClient.Shutdown">
            <summary>
            Shuts down client application
            </summary>
        </member>
        <member name="T:Playnite.SDK.ILogger">
            <summary>
            Describes logger object used to write message into log file.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ILogger.Info(System.String)">
            <summary>
            Writes message to log with Info serverity.
            </summary>
            <param name="message">Message to be added into log.</param>
        </member>
        <member name="M:Playnite.SDK.ILogger.Info(System.Exception,System.String)">
            <summary>
            Writes message to log with Info serverity, including parsed exception.
            </summary>
            <param name="exception">Message to be added into log.</param>
            <param name="message">Exception to be added into log.</param>
        </member>
        <member name="M:Playnite.SDK.ILogger.Debug(System.String)">
            <summary>
            Writes message to log with Debug serverity.
            </summary>
            <param name="message">Message to be added into log.</param>
        </member>
        <member name="M:Playnite.SDK.ILogger.Debug(System.Exception,System.String)">
            <summary>
            Writes message to log with Debug serverity, including parsed exception.
            </summary>
            <param name="exception">Message to be added into log.</param>
            <param name="message">Exception to be added into log.</param>
        </member>
        <member name="M:Playnite.SDK.ILogger.Warn(System.String)">
            <summary>
            Writes message to log with Warning serverity.
            </summary>
            <param name="message">Message to be added into log.</param>
        </member>
        <member name="M:Playnite.SDK.ILogger.Warn(System.Exception,System.String)">
            <summary>
            Writes message to log with Warning serverity, including parsed exception.
            </summary>
            <param name="exception">Message to be added into log.</param>
            <param name="message">Exception to be added into log.</param>
        </member>
        <member name="M:Playnite.SDK.ILogger.Error(System.String)">
            <summary>
            Writes message to log with Error serverity.
            </summary>
            <param name="message">Message to be added into log.</param>
        </member>
        <member name="M:Playnite.SDK.ILogger.Error(System.Exception,System.String)">
            <summary>
            Writes message to log with Error serverity, including parsed exception.
            </summary>
            <param name="exception">Message to be added into log.</param>
            <param name="message">Exception to be added into log.</param>
        </member>
        <member name="T:Playnite.SDK.IMainViewAPI">
            <summary>
            Describes object providing API for main UI view.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IMainViewAPI.SelectedGames">
            <summary>
            Gets list of currently selected games.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IMainViewAPI.OpenPluginSettings(System.Guid)">
            <summary>
            Opens settings view for specified plugin.
            </summary>
            <param name="pluginId">Plugin ID.</param>
            <returns>True if user saved any changes, False if dialog was canceled.</returns>
        </member>
        <member name="T:Playnite.SDK.LibraryMetadataProvider">
            <summary>
            Describes metadata provider for library games.
            </summary>
        </member>
        <member name="M:Playnite.SDK.LibraryMetadataProvider.Dispose">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Playnite.SDK.LibraryMetadataProvider.GetMetadata(Playnite.SDK.Models.Game)">
            <summary>
            Gets metadata for specified games.
            </summary>
            <param name="game">Game to get data for.</param>
            <returns>Game metadata.</returns>
        </member>
        <member name="T:Playnite.SDK.NotificationMessage">
            <summary>
            Represents notification message;
            </summary>
        </member>
        <member name="E:Playnite.SDK.NotificationMessage.Activated">
            <summary>
            Ivokes when <see cref="P:Playnite.SDK.NotificationMessage.ActivationAction"/> is activated.
            </summary>
        </member>
        <member name="P:Playnite.SDK.NotificationMessage.ActivateCommand">
            <summary>
            Gets command to activate <see cref="P:Playnite.SDK.NotificationMessage.ActivationAction"/>.
            </summary>
        </member>
        <member name="P:Playnite.SDK.NotificationMessage.ActivationAction">
            <summary>
            Gets action to be invoked when notification is activated.
            </summary>
        </member>
        <member name="P:Playnite.SDK.NotificationMessage.Id">
            <summary>
            Gets notification id.
            </summary>
        </member>
        <member name="P:Playnite.SDK.NotificationMessage.Text">
            <summary>
            Gets notification content text.
            </summary>
        </member>
        <member name="P:Playnite.SDK.NotificationMessage.Type">
            <summary>
            Gets notification type.
            </summary>
        </member>
        <member name="M:Playnite.SDK.NotificationMessage.#ctor(System.String,System.String,Playnite.SDK.NotificationType)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.NotificationMessage"/>.
            </summary>
            <param name="id">Notification id.</param>
            <param name="text">Notification text.</param>
            <param name="type">Notification type.</param>
        </member>
        <member name="M:Playnite.SDK.NotificationMessage.#ctor(System.String,System.String,Playnite.SDK.NotificationType,System.Action)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.NotificationMessage"/>.
            </summary>
            <param name="id">Notification id.</param>
            <param name="text">Notification text.</param>
            <param name="type">Notification type.</param>
            <param name="action">Action to be invoked when notification is activated.</param>
        </member>
        <member name="T:Playnite.SDK.NotificationType">
            <summary>
            Notification.
            </summary>
        </member>
        <member name="F:Playnite.SDK.NotificationType.Info">
            <summary>
            Info severity.
            </summary>
        </member>
        <member name="F:Playnite.SDK.NotificationType.Error">
            <summary>
            Error serverity
            </summary>
        </member>
        <member name="T:Playnite.SDK.INotificationsAPI">
            <summary>
            Describes notification API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.INotificationsAPI.Messages">
            <summary>
            Gets list of all notification messages.
            </summary>
        </member>
        <member name="P:Playnite.SDK.INotificationsAPI.Count">
            <summary>
            Gets notification count.
            </summary>
        </member>
        <member name="M:Playnite.SDK.INotificationsAPI.Add(Playnite.SDK.NotificationMessage)">
            <summary>
            Adds new notification message.
            </summary>
            <param name="message">Notification message</param>
        </member>
        <member name="M:Playnite.SDK.INotificationsAPI.Add(System.String,System.String,Playnite.SDK.NotificationType)">
            <summary>
            Adds new notification message.
            </summary>
            <param name="id">Notification id.</param>
            <param name="text">Notification text.</param>
            <param name="type">Notification type.</param>
        </member>
        <member name="M:Playnite.SDK.INotificationsAPI.Remove(System.String)">
            <summary>
            Removes specific notification.
            </summary>
            <param name="id">Notification id.</param>
        </member>
        <member name="M:Playnite.SDK.INotificationsAPI.RemoveAll">
            <summary>
            Removes all notifications.
            </summary>
        </member>
        <member name="T:Playnite.SDK.IPlayniteAPI">
            <summary>
            Describes object providing Playnite API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.MainView">
            <summary>
            Gest main view API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.Database">
            <summary>
            Gets database API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.Dialogs">
            <summary>
            Gets dialog API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.Paths">
            <summary>
            Gets paths API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.Notifications">
            <summary>
            Gets notification API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.ApplicationInfo">
            <summary>
            Gets application info API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.WebViews">
            <summary>
            Gets web view API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.Resources">
            <summary>
            Gets resources API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.UriHandler">
            <summary>
            Gets URI handler API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteAPI.ApplicationSettings">
            <summary>
            Get application settings API.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IPlayniteAPI.ExpandGameVariables(Playnite.SDK.Models.Game,System.String)">
            <summary>
            Expands dynamic game variables in specified string.
            </summary>
            <param name="game">Game to use dynamic variables from.</param>
            <param name="inputString">String containing dynamic variables.</param>
            <returns>String with replaces variables.</returns>
        </member>
        <member name="M:Playnite.SDK.IPlayniteAPI.ExpandGameVariables(Playnite.SDK.Models.Game,Playnite.SDK.Models.GameAction)">
            <summary>
            Expands dynamic game variables in specified game action.
            </summary>
            <param name="game">Game to use dynamic variables from.</param>
            <param name="action">Game action to expand variables to.</param>
            <returns>Game action with expanded variables.</returns>
        </member>
        <member name="M:Playnite.SDK.IPlayniteAPI.CreateLogger(System.String)">
            <summary>
            Returns new instance of Playnite logger.
            </summary>
            <param name="name">Logger name.</param>
            <returns>Logger object.</returns>
        </member>
        <member name="M:Playnite.SDK.IPlayniteAPI.CreateLogger">
            <summary>
            Creates new instance of Playnite logger with name of calling class.
            </summary>
            <returns>Logger object.</returns>
        </member>
        <member name="M:Playnite.SDK.IPlayniteAPI.StartGame(System.Guid)">
            <summary>
            Starts game.
            </summary>
            <param name="gameId">Game's database ID.</param>
        </member>
        <member name="T:Playnite.SDK.IPlayniteInfoAPI">
            <summary>
            Describes info API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteInfoAPI.ApplicationVersion">
            <summary>
            Gets Playnite version.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteInfoAPI.Mode">
            <summary>
            Gets mode of curently running application.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteInfoAPI.IsPortable">
            <summary>
            Indicatets whether application is running in portable mode.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteInfoAPI.InOfflineMode">
            <summary>
            Indicatets whether application is running in offline mode.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteInfoAPI.IsDebugBuild">
            <summary>
            Indicatets whether application was built in DEBUG configuration.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlayniteInfoAPI.ThrowAllErrors">
            <summary>
            Indicatets whether application is configured to fail for most unhandled errors.
            </summary>
        </member>
        <member name="T:Playnite.SDK.IPlaynitePathsAPI">
            <summary>
            Describes paths API.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlaynitePathsAPI.IsPortable">
            <summary>
            Gets value indicating whether the application is running in portable mode.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlaynitePathsAPI.ApplicationPath">
            <summary>
            Gets Playnite's installation path.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlaynitePathsAPI.ConfigurationPath">
            <summary>
            Gets path where Playnite's configuration is stored.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IPlaynitePathsAPI.ExtensionsDataPath">
            <summary>
            Gets path dedicated for plugins to store data.
            </summary>
        </member>
        <member name="T:Playnite.SDK.IResourceProvider">
            <summary>
            Describes application resource provider.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IResourceProvider.GetString(System.String)">
            <summary>
            Gets string resource.
            </summary>
            <param name="key">Resource key.</param>
            <returns>String resource.</returns>
        </member>
        <member name="M:Playnite.SDK.IResourceProvider.GetResource(System.String)">
            <summary>
            Gets application resource.
            </summary>
            <param name="key">Resource key.</param>
            <returns>Application resource.</returns>
        </member>
        <member name="T:Playnite.SDK.ISettings">
            <summary>
            Describes settings object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ISettings.VerifySettings(System.Collections.Generic.List{System.String}@)">
            <summary>
            Verifies settings configuration.
            </summary>
            <param name="errors">List of validation errors.</param>
            <returns>true if validation passes, otherwise false.</returns>
        </member>
        <member name="T:Playnite.SDK.WebViewSettings">
            <summary>
            Represents browser view settings.
            </summary>
        </member>
        <member name="P:Playnite.SDK.WebViewSettings.JavaScriptEnabled">
            <summary>
            Gets or sets value indicating whether JavaScript exection is enabled.
            </summary>
        </member>
        <member name="P:Playnite.SDK.WebViewSettings.CacheEnabled">
            <summary>
            Gets or sets value indicating whether cache is enabled.
            </summary>
        </member>
        <member name="T:Playnite.SDK.JavaScriptEvaluationResult">
            <summary>
            Represents JavaScript evaluation resut.
            </summary>
        </member>
        <member name="P:Playnite.SDK.JavaScriptEvaluationResult.Message">
            <summary>
            Gets or sets error message.
            </summary>
        </member>
        <member name="P:Playnite.SDK.JavaScriptEvaluationResult.Success">
            <summary>
            Gets or sets value indicating whether the javascript executed successfully.
            </summary>
        </member>
        <member name="P:Playnite.SDK.JavaScriptEvaluationResult.Result">
            <summary>
            Gets or sets result of script evaluation.
            </summary>
        </member>
        <member name="T:Playnite.SDK.IWebView">
            <summary>
            Describes web view object.
            </summary>
        </member>
        <member name="P:Playnite.SDK.IWebView.CanExecuteJavascriptInMainFrame">
            <summary>
            Gets a flag that indicates if you can execute javascript in the main frame.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IWebView.Open">
            <summary>
            Open view.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IWebView.OpenDialog">
            <summary>
            Open view as modal dialog.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.IWebView.NavigateAndWait(System.String)">
            <summary>
            Navigates to url and wait for page to be loaded.
            </summary>
            <param name="url">URL to load.</param>
        </member>
        <member name="M:Playnite.SDK.IWebView.Navigate(System.String)">
            <summary>
            Navigates to url.
            </summary>
            <param name="url">URL to load.</param>
        </member>
        <member name="M:Playnite.SDK.IWebView.GetPageText">
            <summary>
            Gets page text.
            </summary>
            <returns>Page text.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebView.GetPageTextAsync">
            <summary>
            Gets page text.
            </summary>
            <returns>Page text.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebView.GetPageSource">
            <summary>
            Gets document source.
            </summary>
            <returns>Document source.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebView.GetPageSourceAsync">
            <summary>
            Gets document source.
            </summary>
            <returns>Document source task.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebView.GetCurrentAddress">
            <summary>
            Gets current URL address.
            </summary>
            <returns>URL address.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebView.DeleteDomainCookies(System.String)">
            <summary>
            Deletes all cookies from specified domain.
            </summary>
            <param name="domain">Cookie domain.</param>
        </member>
        <member name="M:Playnite.SDK.IWebView.DeleteCookies(System.String,System.String)">
            <summary>
            Deletes cookies.
            </summary>
            <param name="url">Cookie URL.</param>
            <param name="name">Cookie name.</param>
        </member>
        <member name="M:Playnite.SDK.IWebView.GetCookies">
            <summary>
            Gets all cookies.
            </summary>
            <returns>List of cookies.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebView.SetCookies(System.String,System.String,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Sets cookie data.
            </summary>
            <param name="url">Cookie URL.</param>
            <param name="domain">Cookie domain.</param>
            <param name="name">Cookie name.</param>
            <param name="value">Cookie value.</param>
            <param name="path">Cookie url path.</param>
            <param name="expires">Expiration date.</param>
        </member>
        <member name="M:Playnite.SDK.IWebView.Close">
            <summary>
            Closes view.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IWebView.NavigationChanged">
            <summary>
            Occurs when web view navigatates to a new page.
            </summary>
        </member>
        <member name="E:Playnite.SDK.IWebView.LoadingChanged">
            <summary>
            Occurs when web view loading changes, for example when page is loaded.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IWebView.EvaluateScriptAsync(System.String)">
            <summary>
            Evaluates JavaScript script in the browser instance.
            </summary>
            <param name="script"></param>
            <returns></returns>
        </member>
        <member name="T:Playnite.SDK.IWebViewFactory">
            <summary>
            Describes web view factory provider.
            </summary>
        </member>
        <member name="M:Playnite.SDK.IWebViewFactory.CreateOffscreenView">
            <summary>
            Creates new offscreen web view.
            </summary>
            <returns>Offscreen web view.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebViewFactory.CreateOffscreenView(Playnite.SDK.WebViewSettings)">
            <summary>
            Creates new offscreen web view with specific settings.
            </summary>
            <param name="settings">Browser view settings.</param>
            <returns></returns>
        </member>
        <member name="M:Playnite.SDK.IWebViewFactory.CreateView(System.Int32,System.Int32)">
            <summary>
            Creates new web view.
            </summary>
            <param name="width">View widht.</param>
            <param name="height">View height.</param>
            <returns>Web view.</returns>
        </member>
        <member name="M:Playnite.SDK.IWebViewFactory.CreateView(System.Int32,System.Int32,System.Windows.Media.Color)">
            <summary>
            Creates new web view.
            </summary>
            <param name="width">View widht.</param>
            <param name="height">View height.</param>
            <param name="background">View background color.</param>
            <returns>Web view.</returns>
        </member>
        <member name="T:Playnite.SDK.HttpCookie">
            <summary>
            Represetn web view cookie object.
            </summary>
        </member>
        <member name="M:Playnite.SDK.HttpCookie.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.HttpCookie"/>.
            </summary>
        </member>
        <member name="P:Playnite.SDK.HttpCookie.Name">
            <summary>
            The cookie name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.HttpCookie.Value">
            <summary>
            The cookie value.
            </summary>
        </member>
        <member name="P:Playnite.SDK.HttpCookie.Domain">
            <summary>
            The cookie domain.
            </summary>
        </member>
        <member name="P:Playnite.SDK.HttpCookie.Path">
            <summary>
            The cookie path.
            </summary>
        </member>
        <member name="P:Playnite.SDK.HttpCookie.Expires">
            <summary>
            The cookie expire date.
            </summary>
        </member>
        <member name="P:Playnite.SDK.HttpCookie.Creation">
            <summary>
            The cookie creation date.
            </summary>
        </member>
        <member name="T:Playnite.SDK.NullLoggger">
            <summary>
            Describes logger not logging anywhere.
            </summary>
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Debug(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Debug(System.Exception,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Error(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Error(System.Exception,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Info(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Info(System.Exception,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Warn(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Playnite.SDK.NullLoggger.Warn(System.Exception,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Playnite.SDK.ILogProvider">
            <summary>
            Describes log provider.
            </summary>
        </member>
        <member name="M:Playnite.SDK.ILogProvider.GetLogger(System.String)">
            <summary>
            Gets new logger.
            </summary>
            <param name="loggerName">Logger name.</param>
            <returns>Logger.</returns>
        </member>
        <member name="T:Playnite.SDK.LogManager">
            <summary>
            Represents log manager.
            </summary>
        </member>
        <member name="M:Playnite.SDK.LogManager.Init(Playnite.SDK.ILogProvider)">
            <summary>
            Initializes log manager using specific log provider.
            </summary>
            <param name="manager"></param>
        </member>
        <member name="M:Playnite.SDK.LogManager.GetLogger">
            <summary>
            Gets logger with name of calling class.
            </summary>
            <returns>Logger.</returns>
        </member>
        <member name="M:Playnite.SDK.LogManager.GetLogger(System.String)">
            <summary>
            Gets logger with specific name.
            </summary>
            <param name="loggerName">Logger name.</param>
            <returns>Logger.</returns>
        </member>
        <member name="T:Playnite.SDK.Metadata.GameMetadata">
            <summary>
            Represents game metadata.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.GameMetadata.IsEmpty">
            <summary>
            Gets value indicating wheter the data are empty.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.GameMetadata.GameInfo">
            <summary>
            Gets or sets game information.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.GameMetadata.Icon">
            <summary>
            Gets or sets game icon.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.GameMetadata.CoverImage">
            <summary>
            Gets or sets game cover image.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.GameMetadata.BackgroundImage">
            <summary>
            Gets or sets game background image.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Metadata.GameMetadata.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Metadata.GameMetadata"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Metadata.GameMetadata.#ctor(Playnite.SDK.Models.GameInfo,Playnite.SDK.Metadata.MetadataFile,Playnite.SDK.Metadata.MetadataFile,Playnite.SDK.Metadata.MetadataFile)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Metadata.GameMetadata"/>.
            </summary>
            <param name="gameInfo">Game metadata.</param>
            <param name="icon">Game icon.</param>
            <param name="coverImage">Game cover image.</param>
            <param name="background">Game background image.</param>
        </member>
        <member name="M:Playnite.SDK.Metadata.GameMetadata.GetEmptyData">
            <summary>
            Returns empty metadata object.
            </summary>
            <returns>Empty metadata object.</returns>
        </member>
        <member name="T:Playnite.SDK.Metadata.MetadataFile">
            <summary>
            Represents metadata file.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.MetadataFile.HasContent">
            <summary>
            Indicates whether metadata holds some content.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.MetadataFile.HasImageData">
            <summary>
            Indicates whether there's some source information for the file (content or URL).
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.MetadataFile.FileName">
            <summary>
            Gets or sets file name.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.MetadataFile.Content">
            <summary>
            Gets or sets file content.
            </summary>
        </member>
        <member name="P:Playnite.SDK.Metadata.MetadataFile.OriginalUrl">
            <summary>
            Gets or sets original source url.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Metadata.MetadataFile.#ctor">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Metadata.MetadataFile"/>.
            </summary>
        </member>
        <member name="M:Playnite.SDK.Metadata.MetadataFile.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Metadata.MetadataFile"/>.
            </summary>
            <param name="url">Source URL.</param>
        </member>
        <member name="M:Playnite.SDK.Metadata.MetadataFile.#ctor(System.String,System.Byte[])">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Metadata.MetadataFile"/>.
            </summary>
            <param name="name">File name.</param>
            <param name="data">File content.</param>
        </member>
        <member name="M:Playnite.SDK.Metadata.MetadataFile.#ctor(System.String,System.Byte[],System.String)">
            <summary>
            Creates new instance of <see cref="T:Playnite.SDK.Metadata.MetadataFile"/>.
            </summary>
            <param name="name">File name.</param>
            <param name="data">File content.</param>
            <param name="originalUrl">Source url.</param>
        </member>
        <member name="T:Playnite.SDK.ScriptLanguage">
            <summary>
            Represents script language.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ScriptLanguage.PowerShell">
            <summary>
            Represents PowerShell scripting language.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ScriptLanguage.IronPython">
            <summary>
            Represents IronPython scripting language.
            </summary>
        </member>
        <member name="F:Playnite.SDK.ScriptLanguage.Batch">
            <summary>
            Represents Batch scripting language.
            </summary>
        </member>
        <member name="T:Playnite.SDK.SdkVersions">
            <summary>
            Represents SDK version properties.
            </summary>
        </member>
        <member name="P:Playnite.SDK.SdkVersions.SDKVersion">
            <summary>
            Gets SDK version.
            </summary>
        </member>
        <member name="T:System.Collections.Generic.ComparableDbItemList`1">
            <summary>
            Represent comparable database item collection.
            </summary>
            <typeparam name="T">Database object type.</typeparam>
        </member>
        <member name="M:System.Collections.Generic.ComparableDbItemList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Creates new instance of ComparableDbItemList.
            </summary>
            <param name="collection">Intial collection.</param>
        </member>
        <member name="M:System.Collections.Generic.ComparableDbItemList`1.CompareTo(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:System.Collections.Generic.ComparableList`1">
            <summary>
            Highly unoptimized, should not be used anywhere anymore in new code.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:System.Collections.Generic.ComparableList`1.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="M:System.Collections.Generic.ComparableList`1.#ctor(System.Int32)">
             <summary>
            
             </summary>
             <param name="count"></param>
        </member>
        <member name="M:System.Collections.Generic.ComparableList`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
             <summary>
            
             </summary>
             <param name="collection"></param>
        </member>
        <member name="M:System.Collections.Generic.ComparableList`1.CompareTo(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <returns></returns>
        </member>
        <member name="T:System.Collections.Generic.ObservableObject">
            <summary>
            Represents object implementing INotifyPropertyChanged.
            </summary>
        </member>
        <member name="P:System.Collections.Generic.ObservableObject.SuppressNotifications">
            <summary>
            If set to <c>true</c> no <see cref="E:System.Collections.Generic.ObservableObject.PropertyChanged"/> events will be fired.
            </summary>
        </member>
        <member name="E:System.Collections.Generic.ObservableObject.PropertyChanged">
            <summary>
            Occurs when a property value changes
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ObservableObject.OnPropertyChanged(System.String)">
            <summary>
            Invokes PropertyChanged events.
            </summary>
            <param name="name">Name of property that changed.</param>
        </member>
        <member name="T:System.Collections.Generic.RangeObservableCollection`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:System.Collections.Generic.RangeObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Collections.Generic.RangeObservableCollection`1.OnItemMoved(System.Object,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="index"></param>
            <param name="oldIndex"></param>
        </member>
        <member name="M:System.Collections.Generic.RangeObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:System.Collections.Generic.RangeObservableCollection`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:System.Collections.Generic.ListExtensions">
            <summary>
            Represents class with various extension methods for IEnumerable lists.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.ToObservable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Converts collection to <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> collection.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.HasItems``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Check if collection has any items.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.HasItems``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Check if collection has any items.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.AddMissing``1(System.Collections.Generic.IList{``0},``0)">
            <summary>
            Adds new item to the list only if it's not already part of the list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="item"></param>
            <returns>True if item was added, false if it's already part of the list.</returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.AddMissing``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds new items to the list only if they are not already part of the list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="items"></param>
            <returns>True if an item was added, false if none item was added.</returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.HasNonEmptyItems(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Checks if collection has any non-empty string items.
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.IntersectsPartiallyWith(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparison)">
            <summary>
            Checks if source collection contains any items from target one, even if just partially.
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns>True of target collection contains items that are also part of source collection.</returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.IntersectsExactlyWith(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.StringComparison)">
            <summary>
            Checks if source collection contains any items from target one.
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <param name="comparison"></param>
            <returns>True of target collection contains items that are also part of source collection.</returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.ContainsString(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
            <summary>
            Checks if source collection constains specified string completely.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.ContainsStringPartial(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
            <summary>
            Checks if part of specified string is part of the collection.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.ContainsPartOfString(System.Collections.Generic.IEnumerable{System.String},System.String,System.StringComparison)">
            <summary>
            Checks if source collection constains part of specified string.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.IsListEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Checks if two collections contain the same items in any order.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.IsListEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Checks if two collections contain the same items in any order.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.IsListEqualExact``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Checks if two collections contain the same items in the same order.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.Contains``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Check if collection contains all items from other collection (in any order).
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.GetCommonItems``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Gets items contained in all colletions.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.GetDistinctItems``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Gets items distinct to all collections.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.Merge``1(System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Merge collection together.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="lists"></param>
            <returns></returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.Merge``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Merge two collection together.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list1"></param>
            <param name="list2"></param>
            <returns></returns>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.ForEach``1(System.Collections.ObjectModel.ObservableCollection{``0},System.Action{``0})">
             <summary>
            
             </summary>
             <typeparam name="T"></typeparam>
             <param name="source"></param>
             <param name="action"></param>
        </member>
        <member name="T:System.Collections.Concurrent.ObservableConcurrentDictionary`2">
            <summary>
            Provides a thread-safe dictionary for use with data binding.
            </summary>
            <typeparam name="TKey">Specifies the type of the keys in this collection.</typeparam>
            <typeparam name="TValue">Specifies the type of the values in this collection.</typeparam>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.#ctor">
            <summary>
            Initializes an instance of the ObservableConcurrentDictionary class.
            </summary>
        </member>
        <member name="E:System.Collections.Concurrent.ObservableConcurrentDictionary`2.CollectionChanged">
            <summary>Event raised when the collection changes.</summary>
        </member>
        <member name="E:System.Collections.Concurrent.ObservableConcurrentDictionary`2.PropertyChanged">
            <summary>Event raised when a property on the collection changes.</summary>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.NotifyObserversOfChange">
            <summary>
            Notifies observers of CollectionChanged or PropertyChanged of an update to the dictionary.
            </summary>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.TryAddWithNotification(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>Attempts to add an item to the dictionary, notifying observers of any changes.</summary>
            <param name="item">The item to be added.</param>
            <returns>Whether the add was successful.</returns>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.TryAddWithNotification(`0,`1)">
            <summary>Attempts to add an item to the dictionary, notifying observers of any changes.</summary>
            <param name="key">The key of the item to be added.</param>
            <param name="value">The value of the item to be added.</param>
            <returns>Whether the add was successful.</returns>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.TryRemoveWithNotification(`0,`1@)">
            <summary>Attempts to remove an item from the dictionary, notifying observers of any changes.</summary>
            <param name="key">The key of the item to be removed.</param>
            <param name="value">The value of the item removed.</param>
            <returns>Whether the removal was successful.</returns>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.UpdateWithNotification(`0,`1)">
            <summary>Attempts to add or update an item in the dictionary, notifying observers of any changes.</summary>
            <param name="key">The key of the item to be updated.</param>
            <param name="value">The new value to set for the item.</param>
            <returns>Whether the update was successful.</returns>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.Add(`0,`1)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.ContainsKey(`0)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="P:System.Collections.Concurrent.ObservableConcurrentDictionary`2.Keys">
             <summary>
            
             </summary>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.Remove(`0)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
        <member name="M:System.Collections.Concurrent.ObservableConcurrentDictionary`2.TryGetValue(`0,`1@)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="P:System.Collections.Concurrent.ObservableConcurrentDictionary`2.Values">
             <summary>
            
             </summary>
        </member>
        <member name="P:System.Collections.Concurrent.ObservableConcurrentDictionary`2.Item(`0)">
             <summary>
            
             </summary>
             <param name="key"></param>
             <returns></returns>
        </member>
    </members>
</doc>
